/**
 * Module dependencies
 */

var exec = require('co-exec');
var fs = require('co-fs');


/**
 * Module exports
 */

var exports = module.exports;

exports.convert = convert;
exports.identify = identify;
exports.extend = extend;
exports.run = run;


/**
 * Utilities
 */

function *convert (args) {
    return yield run('convert', args);
}

function *identify (args) {
	var result;
	
	result = yield run('identify', args);
	result = /(.+) ([A-Z]{3,4}) ([0-9]+)x([0-9]+)/.exec(result);
	
	var path = args.path || args;
	
	var stat = yield fs.stat(path);
	
	return {
		path: result[1],
        format: result[2],
        width: +result[3],
        height: +result[4],
        size: stat.size,
        formattedSize: formatSize(stat.size)
	};
}

function *run (command, args) {
    if (args instanceof Array) {
        args = args.join(' ');
    }

    var Image = require('./magician');

    if (args instanceof Image) {
        args = args.path;
    }

	return yield exec(command + ' ' + args);
}

function extend (dest, src) {
    Object.keys(src).forEach(function (key) {
        dest[key] = src[key];
    });

    return dest;
};


/**
 * Converts size to human-readable format
 */

function formatSize (size) {
    if (size > 1000000000) {
        return (size / 1000000000.0).toPrecision(3) + ' gigabytes';
    } else if (size > 1000000) {
        return (size / 1000000.0).toPrecision(3) + ' megabytes';
    } else if (size > 1000) {
        return (size / 1000.0).toPrecision(3) + ' kilobytes';
    } else {
        return size + ' bytes';
    }
}